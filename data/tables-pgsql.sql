BEGIN;

CREATE TABLE IF NOT EXISTS /*#*/config (
	id text NOT NULL,
	value text NOT NULL
);

CREATE TABLE IF NOT EXISTS /*#*/countries (
	countryid smallint GENERATED BY DEFAULT AS IDENTITY,
	country text NOT NULL,
	PRIMARY KEY (countryid),
	UNIQUE (country)
);

CREATE TABLE IF NOT EXISTS /*#*/states (
	stateid smallint GENERATED BY DEFAULT AS IDENTITY,
	state text NOT NULL,
	PRIMARY KEY (stateid)
);

CREATE TABLE IF NOT EXISTS /*#*/locations (
	locationid integer GENERATED BY DEFAULT AS IDENTITY,
	countryid smallint NOT NULL REFERENCES /*#*/countries(countryid),
	stateid smallint NOT NULL REFERENCES /*#*/states(stateid),
	lat real NOT NULL,
	lon real NOT NULL,
	location text NOT NULL,
	PRIMARY KEY (locationid),
	UNIQUE (lat, lon)
);

CREATE TABLE IF NOT EXISTS /*#*/devs (
	devid integer GENERATED BY DEFAULT AS IDENTITY,
	dev text,
	PRIMARY KEY (devid)
);

CREATE TABLE IF NOT EXISTS /*#*/tags (
	tagid SERIAL,
	tag text NOT NULL,
	cat integer DEFAULT 0 NOT NULL,
	PRIMARY KEY (tagid)
);

CREATE TABLE IF NOT EXISTS /*#*/users (
	userid smallint GENERATED BY DEFAULT AS IDENTITY,
	username text NOT NULL,
	password text NOT NULL,
	role smallint NOT NULL,
	token text NOT NULL,
	PRIMARY KEY (userid)
);

CREATE TABLE IF NOT EXISTS /*#*/dirs (
	dirid integer GENERATED BY DEFAULT AS IDENTITY,
	dir text NOT NULL,
	mt integer DEFAULT 0 NOT NULL,
	sz bigint DEFAULT 0 NOT NULL,
	qt integer DEFAULT 0 NOT NULL,
	parentid integer REFERENCES /*#*/dirs(dirid) ON DELETE CASCADE,
	thm integer,
	PRIMARY KEY (dirid),
	UNIQUE (dir)
);

CREATE TABLE IF NOT EXISTS /*#*/files (
	fileid integer GENERATED BY DEFAULT AS IDENTITY,
	dirid integer NOT NULL REFERENCES /*#*/dirs(dirid) ON DELETE CASCADE,
	file text NOT NULL,
	ft smallint DEFAULT 0 NOT NULL,
	sz bigint DEFAULT 0 NOT NULL,
	mt integer DEFAULT 0 NOT NULL,
	tk integer DEFAULT 0 NOT NULL,
	fps smallint DEFAULT 0 NOT NULL,
	dur integer DEFAULT 0 NOT NULL,
	w integer DEFAULT 0 NOT NULL,
	h integer DEFAULT 0 NOT NULL,
	ori smallint DEFAULT 0 NOT NULL,
	lat integer DEFAULT 0 NOT NULL,
	lon integer DEFAULT 0 NOT NULL,
	kw smallint DEFAULT 0 NOT NULL,
	th smallint DEFAULT 2 NOT NULL,
	star smallint DEFAULT 0 NOT NULL,
	locationid integer REFERENCES /*#*/locations(locationid) ON DELETE SET NULL,
	devid integer REFERENCES /*#*/devs(devid) ON DELETE SET NULL,
	PRIMARY KEY (fileid),
	UNIQUE (dirid, file)
);

CREATE TABLE IF NOT EXISTS /*#*/albums (
	albumid integer GENERATED BY DEFAULT AS IDENTITY,
	userid integer NOT NULL,
	name text NOT NULL,
	qt integer DEFAULT 0 NOT NULL,
	mtime integer DEFAULT 0 NOT NULL,
	share text,
	family smallint DEFAULT 0 NOT NULL,
	thm integer REFERENCES /*#*/files(fileid) ON DELETE SET NULL,
	PRIMARY KEY (albumid),
	UNIQUE (share)
);

CREATE TABLE IF NOT EXISTS /*#*/albumfiles (
	albumid integer NOT NULL REFERENCES /*#*/albums(albumid) ON DELETE CASCADE,
	fileid integer NOT NULL REFERENCES /*#*/files(fileid) ON DELETE CASCADE,
	PRIMARY KEY (albumid, fileid)
);

CREATE TABLE IF NOT EXISTS /*#*/tagfiles (
	fileid integer NOT NULL REFERENCES /*#*/files(fileid) ON DELETE CASCADE,
	tagid integer NOT NULL REFERENCES /*#*/tags(tagid) ON DELETE CASCADE,
	PRIMARY KEY (fileid, tagid)
);

CREATE UNIQUE INDEX IF NOT EXISTS /*#*/config_idx ON /*#*/config (lower(id));
CREATE UNIQUE INDEX IF NOT EXISTS /*#*/devs_idx ON /*#*/devs (lower(dev));
CREATE UNIQUE INDEX IF NOT EXISTS /*#*/states_idx ON /*#*/states (lower(state));
CREATE UNIQUE INDEX IF NOT EXISTS /*#*/tags_idx ON /*#*/tags (lower(tag));
INSERT INTO /*#*/dirs (dirid, dir) SELECT 1, '' WHERE NOT EXISTS (SELECT 1 FROM /*#*/dirs WHERE dirid = 1);

ALTER TABLE /*#*/dirs DROP CONSTRAINT IF EXISTS /*#*/dirs_thm_fk;
ALTER TABLE /*#*/dirs ADD CONSTRAINT /*#*/dirs_thm_fk
	FOREIGN KEY (thm) REFERENCES /*#*/files(fileid) ON DELETE SET NULL;

COMMIT;
